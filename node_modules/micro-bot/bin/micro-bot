#!/usr/bin/env node

const path = require('path')
const parse = require('minimist')
const isAsyncSupported = require('is-async-supported')

const defaultRequestHandler = (req, res) => {
  res.writeHead(302, { 'location': 'https://telegram.org' })
  res.end()
}

const help = () => {
  console.log(`Usage: micro-bot [opts] <file>

  -t  Bot token
  -d  Webhook domain
  -H  Webhook host [0.0.0.0]
  -p  Webhook port [3000]
  -h  Show this help message`)
}

const args = parse(process.argv, {
  alias: {
    t: 'token',
    d: 'domain',
    H: 'host',
    h: 'help',
    p: 'port'
  },
  boolean: ['h'],
  default: {
    H: '0.0.0.0',
    p: 3000
  }
})

if (args.help) {
  help()
  process.exit(0)
}
const token = args.token || process.env.BOT_TOKEN
const domain = args.domain || process.env.BOT_DOMAIN
if (!token) {
  console.error(`μ-bot: Please supply Bot token`)
  help()
  process.exit(1)
}

let [,, file] = args._

if (!file) {
  try {
    const packageJson = require(path.resolve(process.cwd(), 'package.json'))
    file = packageJson.main || 'index.js'
  } catch (err) {
    if (err.code === 'MODULE_NOT_FOUND') {
      console.error(`μ-bot: Could not read \`package.json\`: ${err.message}`)
      process.exit(1)
    }
  }
}

if (!file) {
  console.error('μ-bot: Please supply a file with handler.')
  help()
  process.exit(1)
}

if (file[0] !== '/') {
  file = path.resolve(process.cwd(), file)
}

let botHandler
let requestHandler
let tlsOptions

try {
  const mod = require(file)
  botHandler = mod.botHandler || mod
  requestHandler = mod.requestHandler || defaultRequestHandler
  tlsOptions = mod.tlsOptions
} catch (err) {
  console.error(`μ-bot: Error when importing ${file}: ${err.stack}`)
  process.exit(1)
}

const webhookOpts = {
  domain: domain,
  port: args.port,
  host: args.host,
  tlsOptions: tlsOptions
}

if (!isAsyncSupported()) {
  const asyncToGen = require('async-to-gen/register')
  const pathSep = process.platform === 'win32' ? '\\\\' : '/'
  const directoryName = path.parse(path.join(__dirname, '..')).base
  const fileDirectoryPath = path.parse(file).dir

  asyncToGen({
    includes: new RegExp(`.*${directoryName}?${pathSep}(lib|bin)|${fileDirectoryPath}.*`),
    excludes: null,
    sourceMaps: false
  })
}

const { start } = require('../')

start(token, botHandler, webhookOpts, requestHandler).catch((err) => {
  console.log(`μ-bot: Failed to start bot: ${err}`)
})
